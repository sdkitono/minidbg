# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.30

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: MiniDbg
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = /Users/samuelkitono/cpp/minidbg/build/
# =============================================================================
# Object build statements for EXECUTABLE target minidbg


#############################################
# Order-only phony target for minidbg

build cmake_object_order_depends_target_minidbg: phony || libelfin

build CMakeFiles/minidbg.dir/src/minidbg.cpp.o: CXX_COMPILER__minidbg_unscanned_Debug /Users/samuelkitono/cpp/minidbg/src/minidbg.cpp || cmake_object_order_depends_target_minidbg
  DEP_FILE = CMakeFiles/minidbg.dir/src/minidbg.cpp.o.d
  FLAGS = -g -std=gnu++14 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -mmacosx-version-min=14.3
  INCLUDES = -I/Users/samuelkitono/cpp/minidbg/ext/libelfin -I/Users/samuelkitono/cpp/minidbg/ext/linenoise -I/Users/samuelkitono/cpp/minidbg/include
  OBJECT_DIR = CMakeFiles/minidbg.dir
  OBJECT_FILE_DIR = CMakeFiles/minidbg.dir/src

build CMakeFiles/minidbg.dir/ext/linenoise/linenoise.c.o: C_COMPILER__minidbg_unscanned_Debug /Users/samuelkitono/cpp/minidbg/ext/linenoise/linenoise.c || cmake_object_order_depends_target_minidbg
  DEP_FILE = CMakeFiles/minidbg.dir/ext/linenoise/linenoise.c.o.d
  FLAGS = -g -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -mmacosx-version-min=14.3
  INCLUDES = -I/Users/samuelkitono/cpp/minidbg/ext/libelfin -I/Users/samuelkitono/cpp/minidbg/ext/linenoise -I/Users/samuelkitono/cpp/minidbg/include
  OBJECT_DIR = CMakeFiles/minidbg.dir
  OBJECT_FILE_DIR = CMakeFiles/minidbg.dir/ext/linenoise


# =============================================================================
# Link build statements for EXECUTABLE target minidbg


#############################################
# Link the executable minidbg

build minidbg: CXX_EXECUTABLE_LINKER__minidbg_Debug CMakeFiles/minidbg.dir/src/minidbg.cpp.o CMakeFiles/minidbg.dir/ext/linenoise/linenoise.c.o | /Users/samuelkitono/cpp/minidbg/ext/libelfin/dwarf/libdwarf++.a /Users/samuelkitono/cpp/minidbg/ext/libelfin/elf/libelf++.a || libelfin
  FLAGS = -g -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -mmacosx-version-min=14.3
  LINK_LIBRARIES = /Users/samuelkitono/cpp/minidbg/ext/libelfin/dwarf/libdwarf++.a  /Users/samuelkitono/cpp/minidbg/ext/libelfin/elf/libelf++.a
  OBJECT_DIR = CMakeFiles/minidbg.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = minidbg
  TARGET_PDB = minidbg.dbg

# =============================================================================
# Object build statements for EXECUTABLE target hello


#############################################
# Order-only phony target for hello

build cmake_object_order_depends_target_hello: phony || .

build CMakeFiles/hello.dir/examples/hello.cpp.o: CXX_COMPILER__hello_unscanned_Debug /Users/samuelkitono/cpp/minidbg/examples/hello.cpp || cmake_object_order_depends_target_hello
  DEP_FILE = CMakeFiles/hello.dir/examples/hello.cpp.o.d
  FLAGS = -g -std=gnu++14 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -mmacosx-version-min=14.3 -g -O0
  INCLUDES = -I/Users/samuelkitono/cpp/minidbg/ext/libelfin -I/Users/samuelkitono/cpp/minidbg/ext/linenoise -I/Users/samuelkitono/cpp/minidbg/include
  OBJECT_DIR = CMakeFiles/hello.dir
  OBJECT_FILE_DIR = CMakeFiles/hello.dir/examples


# =============================================================================
# Link build statements for EXECUTABLE target hello


#############################################
# Link the executable hello

build hello: CXX_EXECUTABLE_LINKER__hello_Debug CMakeFiles/hello.dir/examples/hello.cpp.o
  FLAGS = -g -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -mmacosx-version-min=14.3
  OBJECT_DIR = CMakeFiles/hello.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = hello
  TARGET_PDB = hello.dbg

# =============================================================================
# Object build statements for EXECUTABLE target variable


#############################################
# Order-only phony target for variable

build cmake_object_order_depends_target_variable: phony || .

build CMakeFiles/variable.dir/examples/variable.cpp.o: CXX_COMPILER__variable_unscanned_Debug /Users/samuelkitono/cpp/minidbg/examples/variable.cpp || cmake_object_order_depends_target_variable
  DEP_FILE = CMakeFiles/variable.dir/examples/variable.cpp.o.d
  FLAGS = -g -std=gnu++14 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -mmacosx-version-min=14.3 -gdwarf-2 -O0
  INCLUDES = -I/Users/samuelkitono/cpp/minidbg/ext/libelfin -I/Users/samuelkitono/cpp/minidbg/ext/linenoise -I/Users/samuelkitono/cpp/minidbg/include
  OBJECT_DIR = CMakeFiles/variable.dir
  OBJECT_FILE_DIR = CMakeFiles/variable.dir/examples


# =============================================================================
# Link build statements for EXECUTABLE target variable


#############################################
# Link the executable variable

build variable: CXX_EXECUTABLE_LINKER__variable_Debug CMakeFiles/variable.dir/examples/variable.cpp.o
  FLAGS = -g -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -mmacosx-version-min=14.3
  OBJECT_DIR = CMakeFiles/variable.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = variable
  TARGET_PDB = variable.dbg

# =============================================================================
# Object build statements for EXECUTABLE target unwinding


#############################################
# Order-only phony target for unwinding

build cmake_object_order_depends_target_unwinding: phony || .

build CMakeFiles/unwinding.dir/examples/stack_unwinding.cpp.o: CXX_COMPILER__unwinding_unscanned_Debug /Users/samuelkitono/cpp/minidbg/examples/stack_unwinding.cpp || cmake_object_order_depends_target_unwinding
  DEP_FILE = CMakeFiles/unwinding.dir/examples/stack_unwinding.cpp.o.d
  FLAGS = -g -std=gnu++14 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -mmacosx-version-min=14.3 -g -O0
  INCLUDES = -I/Users/samuelkitono/cpp/minidbg/ext/libelfin -I/Users/samuelkitono/cpp/minidbg/ext/linenoise -I/Users/samuelkitono/cpp/minidbg/include
  OBJECT_DIR = CMakeFiles/unwinding.dir
  OBJECT_FILE_DIR = CMakeFiles/unwinding.dir/examples


# =============================================================================
# Link build statements for EXECUTABLE target unwinding


#############################################
# Link the executable unwinding

build unwinding: CXX_EXECUTABLE_LINKER__unwinding_Debug CMakeFiles/unwinding.dir/examples/stack_unwinding.cpp.o
  FLAGS = -g -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -mmacosx-version-min=14.3
  OBJECT_DIR = CMakeFiles/unwinding.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = unwinding
  TARGET_PDB = unwinding.dbg


#############################################
# Utility command for libelfin

build libelfin: phony CMakeFiles/libelfin


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/samuelkitono/cpp/minidbg/build && /opt/homebrew/Cellar/cmake/3.30.0/bin/ccmake -S/Users/samuelkitono/cpp/minidbg -B/Users/samuelkitono/cpp/minidbg/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/samuelkitono/cpp/minidbg/build && /opt/homebrew/Cellar/cmake/3.30.0/bin/cmake --regenerate-during-build -S/Users/samuelkitono/cpp/minidbg -B/Users/samuelkitono/cpp/minidbg/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util


#############################################
# Custom command for CMakeFiles/libelfin

build CMakeFiles/libelfin | ${cmake_ninja_workdir}CMakeFiles/libelfin: CUSTOM_COMMAND
  COMMAND = cd /Users/samuelkitono/cpp/minidbg/ext/libelfin && make

# =============================================================================
# Target aliases.

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: /Users/samuelkitono/cpp/minidbg/build

build all: phony minidbg hello variable unwinding

# =============================================================================
# Unknown Build Time Dependencies.
# Tell Ninja that they may appear as side effects of build rules
# otherwise ordered by order-only dependencies.

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | /Users/samuelkitono/cpp/minidbg/CMakeLists.txt /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeCInformation.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeCXXInformation.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeGenericSystem.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeInitializeConfigs.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeLanguageInformation.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Compiler/AppleClang-C.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Compiler/AppleClang-CXX.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Compiler/Clang.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Compiler/GNU.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Apple-AppleClang-C.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Apple-AppleClang-CXX.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Apple-Clang-C.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Apple-Clang-CXX.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Apple-Clang.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Darwin-Initialize.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Darwin.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.30.0/CMakeCCompiler.cmake CMakeFiles/3.30.0/CMakeCXXCompiler.cmake CMakeFiles/3.30.0/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build /Users/samuelkitono/cpp/minidbg/CMakeLists.txt /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeCInformation.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeCXXInformation.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeGenericSystem.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeInitializeConfigs.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeLanguageInformation.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Compiler/AppleClang-C.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Compiler/AppleClang-CXX.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Compiler/Clang.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Compiler/GNU.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Apple-AppleClang-C.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Apple-AppleClang-CXX.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Apple-Clang-C.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Apple-Clang-CXX.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Apple-Clang.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Darwin-Initialize.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/Darwin.cmake /opt/homebrew/Cellar/cmake/3.30.0/share/cmake/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.30.0/CMakeCCompiler.cmake CMakeFiles/3.30.0/CMakeCXXCompiler.cmake CMakeFiles/3.30.0/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
